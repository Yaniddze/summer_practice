version: "3.7"

services:

  server:
    image: nginx:1.14.2-alpine
    restart: always
    volumes:
      - ./nginx/public_html:/public_html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/dhparam:/etc/nginx/dhparam
      - ./nginx/certbot/conf:/etc/nginx/ssl
      - ./nginx/certbot/data:/usr/share/nginx/html/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web_app
    links:
      - gateway

  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email yanrus09@gmail.com --agree-tos --no-eff-email -d yaniddze.com
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/logs:/var/log/letsencrypt
      - ./nginx/certbot/data:/usr/share/nginx/html/letsencrypt

  web_app:
    build: ./web_app/
    volumes:
      - ./nginx/public_html:/app/build
    depends_on:
      - gateway

  gateway:
    build: ./DotNetApi/Gateway
    restart: always
    # ports:
    #   - "8088:80"
    depends_on:
      - identity-service 
      - streaming-service

  # Database of identity service
  postgres-identity:
    image: postgres:latest
    restart: always
    volumes:
      - ./database/someapi/data:/var/lib/postgresql/data
      - ./database/someapi/scripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=identity
    
  identity-service:
    build: ./DotNetApi/IdentityService
    restart: always
    depends_on:
      - postgres-identity
      - rabbitmq
    # ports:
    #   - "8088:80"
    environment:
      - DB_CONNECTION_STRING=host=postgres-identity;port=5432;database=identity;username=postgres;password=postgres
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest

  message-service:
    build: ./DotNetApi/MessageService
    restart: always
    depends_on:
      - rabbitmq
    # ports:
    #   - "8088:80"
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest

  streaming-service:
    build: ./DotNetApi/StreamingService
    restart: always
    # ports:
    #   - "8089:80"
    depends_on:
      - mongo-streaming
    environment:
      - DB_CONNECTION_STRING=mongodb://root:root@mongo-streaming:27017
      - DB_NAME=songs

  # Database for streaming service
  mongo-streaming:
    image: mongo:latest
    restart: always
    volumes:
      - ./database/streaming/data:/data/db
      - ./database/streaming/config:/data/configdb
    environment:
      - MONGO_INITDB_DATABASE=songs
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root

  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    restart: always
